{\rtf1\ansi\ansicpg949\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11000\viewh19580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs44 \cf0 ch4-3. \'c6\'c4\'c0\'cf \'c0\'d0\'b0\'ed \'be\'b2\'b1\'e2\
- \'bb\'e7\'bf\'eb\'c0\'da\'b0\'a1 \'c1\'f7\'c1\'a2 \'c0\'d4\'b7\'c2\'c7\'cf\'b4\'c2 \'b9\'e6\'bd\'c4\'b0\'fa \'b8\'f0\'b4\'cf\'c5\'cd \'c8\'ad\'b8\'e9\'bf\'a1 \'b0\'e1\'b0\'fa\'b0\'aa\'c0\'bb \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'b9\'e6\'bd\'c4 \'c0\'cc\'bf\'dc\'bf\'a1\'b5\'b5 \'b4\'d9\'be\'e7\'c7\'d1 \'c0\'d4\'c3\'e2\'b7\'c2 \'b9\'e6\'bd\'c4\'c0\'cc \'c0\'d6\'b4\'d9.\
- \'c6\'c4\'c0\'cf\'c0\'bb \'c5\'eb\'c7\'d1 \'c0\'d4\'c3\'e2\'b7\'c2 \'b9\'e6\'b9\'fd\'a1\'a6 \'bb\'f5\'b7\'ce\'bf\'ee \'c6\'c4\'c0\'cf\'c0\'bb \'b8\'b8\'b5\'e7 \'b5\'da \'b0\'e1\'b0\'fa\'b0\'aa\'c0\'bb \'bb\'f5 \'c6\'c4\'c0\'cf\'bf\'a1 \'c0\'fb\'be\'ee\'ba\'b8\'b1\'e2 + \'c0\'fb\'c0\'ba \'b3\'bb\'bf\'eb\'c0\'bb \'c0\'d0\'b0\'ed \'bb\'f5\'b7\'ce\'bf\'ee \'b3\'bb\'bf\'eb\'c0\'bb \'c3\'df\'b0\'a1\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\
\

\f1\b \ul ** \'c6\'c4\'c0\'cf\'bb\'fd\'bc\'ba\'c7\'cf\'b1\'e2
\f0\b0 \ulnone \
\'c6\'c4\'c0\'cf \'b0\'b4\'c3\'bc = open(\'c6\'c4\'c0\'cf \'c0\'cc\'b8\'a7, \'c6\'c4\'c0\'cf \'bf\'ad\'b1\'e2 \'b8\'f0\'b5\'e5)\
\
f = open("\'bb\'f5\'c6\'c4\'c0\'cf.txt", 'w')\
f.close()\
\
- \'c6\'c4\'c0\'cf \'bf\'ad\'b1\'e2 \'b8\'f0\'b5\'e5\'bf\'a1\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'b0\'cd\'c0\'cc \'c0\'d6\'b4\'d9.\
	r : \'c0\'d0\'b1\'e2 \'b8\'f0\'b5\'e5 - \'c6\'c4\'c0\'cf\'c0\'bb \'c0\'d0\'b1\'e2\'b8\'b8 \'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\
	w : \'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5 - \'c6\'c4\'c0\'cf\'bf\'a1 \'b3\'bb\'bf\'eb\'c0\'bb \'be\'b5 \'b6\'a7 \'bb\'e7\'bf\'eb\
	a : \'c3\'df\'b0\'a1 \'b8\'f0\'b5\'e5 - \'c6\'c4\'c0\'cf\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1 \'bb\'f5\'b7\'ce\'bf\'ee \'b3\'bb\'bf\'eb\'c0\'bb \'c3\'df\'b0\'a1\'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\
- \'c6\'c4\'c0\'cf\'c0\'bb \'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5\'b7\'ce \'bf\'ad\'b8\'e9\
	\'c6\'c4\'c0\'cf\'c0\'cc \'c0\'cc\'b9\'cc \'c1\'b8\'c0\'e7 : \'bf\'f8\'b7\'a1 \'b3\'bb\'bf\'eb\'c0\'cc \'b8\'f0\'b5\'ce \'bb\'e7\'b6\'f3\'c1\'fc\
	\'c6\'c4\'c0\'cf\'c0\'cc \'be\'f8\'c0\'bd : \'bb\'f5\'b7\'ce\'bf\'ee \'c6\'c4\'c0\'cf\'c0\'cc \'bb\'fd\'bc\'ba\'b5\'ca\
- f.close() : \'bf\'ad\'b7\'c1 \'c0\'d6\'b4\'c2 \'c6\'c4\'c0\'cf \'b0\'b4\'c3\'bc\'b8\'a6 \'b4\'dd\'be\'c6\'c1\'dc\'a1\'a6 \'bf\'ad\'b7\'c1 \'c0\'d6\'b4\'c2 \'c6\'c4\'c0\'cf\'c0\'bb \'b4\'dd\'c1\'f6 \'be\'ca\'b0\'ed \'bb\'e7\'bf\'eb\'c7\'cf\'b7\'c1\'c7\'cf\'b8\'e9 \'bf\'c0\'b7\'f9\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c1\'f7\'c1\'a2 \'b4\'dd\'be\'c6\'c1\'d6\'b4\'c2 \'b0\'cd\'c0\'cc \'c1\'c1\'b4\'d9.\
\
- open(\'a1\'b0\'b0\'e6\'b7\'ce/\'c6\'c4\'c0\'cf\'b8\'ed\'a1\'b1, \'a1\'ae\'c0\'d0\'b1\'e2\'c7\'fc\'bd\'c4\'a1\'af) \'c0\'bb \'c5\'eb\'c7\'d8 \'c6\'af\'c1\'a4 \'c0\'a7\'c4\'a1\'bf\'a1 \'c6\'c4\'c0\'cf\'c0\'bb \'bb\'fd\'bc\'ba, \'c0\'d0\'b1\'e2, \'be\'b2\'b1\'e2 \'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'d9.\
\

\f1\b \ul ** \'c6\'c4\'c0\'cf\'c0\'bb \'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5\'b7\'ce \'bf\'ad\'be\'ee \'c3\'e2\'b7\'c2\'b0\'aa \'c0\'fb\'b1\'e2
\f0\b0 \ulnone \
f = open("\'bb\'f5\'c6\'c4\'c0\'cf.txt", 'w')\
for i in range(1, 11):\
    data = "%d\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\\n" % i\
    f.write(data)\
f.close()\
\
for i in range(1,11):\
    data = "%d\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\\n" % i\
    print(data)\
\
- \'b5\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'c7 \'c2\'f7\'c0\'cc\'c1\'a1\'c0\'ba data\'b8\'a6 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'cc\'b4\'d9. \'b5\'ce \'b9\'f8\'c2\'b0 \'b9\'e6\'b9\'fd\'c0\'ba \'bf\'ec\'b8\'ae\'b0\'a1 \'bb\'e7\'bf\'eb\'c7\'d8\'bf\'d4\'b4\'f8 \'b8\'f0\'b4\'cf\'c5\'cd\'bf\'a1 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'cc\'b0\'ed, \'c3\'b9 \'b9\'f8\'c2\'b0 \'b9\'e6\'b9\'fd\'c0\'ba \'b8\'f0\'b4\'cf\'c5\'cd \'c8\'ad\'b8\'e9 \'b4\'eb\'bd\'c5 \'c6\'c4\'c0\'cf\'bf\'a1 \'b0\'e1\'b0\'fa\'b0\'aa\'c0\'bb \'c0\'fb\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'cc\'b4\'d9.\
- \'b5\'ce \'c4\'da\'b5\'e5\'c0\'c7 \'c2\'f7\'c0\'cc\'b4\'c2 print(data) \'bf\'cd f.write(data) \'b9\'db\'bf\'a1 \'be\'f8\'b4\'d9.\
- \'b0\'b0\'c0\'ba \'b3\'bb\'bf\'eb\'c0\'cc \'c7\'cf\'b3\'aa\'b4\'c2 \'b8\'f0\'b4\'cf\'c5\'cd\'bf\'a1 \'c3\'e2\'b7\'c2, \'c7\'cf\'b3\'aa\'b4\'c2 \'a1\'ae\'bb\'f5\'c6\'c4\'c0\'cf.txt\'a1\'af\'bf\'a1 \'b4\'e3\'b1\'e8\
\

\f1\b \ul ** \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'c7 \'bf\'dc\'ba\'ce\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c8 \'c6\'c4\'c0\'cf\'c0\'bb \'c0\'d0\'b4\'c2 \'bf\'a9\'b7\'af \'b0\'a1\'c1\'f6 \'b9\'e6\'b9\'fd
\f0\b0 \ulnone \
\

\f1\b * readline \'c7\'d4\'bc\'f6 \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2
\f0\b0 \
(\'c3\'b9 \'c1\'d9 \'c0\'d0\'b1\'e2)\
f = open("\'bb\'f5\'c6\'c4\'c0\'cf.txt", 'r')\
line = f.readline()\
print(line)\
f.close()\
>>> 1\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\
\
(\'b8\'f0\'b5\'e7 \'c1\'d9 \'c0\'d0\'b1\'e2)\
f = open("\'bb\'f5\'c6\'c4\'c0\'cf.txt", 'r')\
while True:\
    line = f.readline()\
    if not line:\
        break\
    print(line)\
f.close()\
>>> 1\'b9\'f8\'c2\'b0 ~ 10\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\
- \'b9\'ab\'c7\'d1\'b7\'e7\'c7\'c1 \'be\'c8\'bf\'a1\'bc\'ad f.readline()\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d8 \'c6\'c4\'c0\'cf\'c0\'bb \'b0\'e8\'bc\'d3\'c7\'d8\'bc\'ad \'c7\'d1 \'c1\'d9\'be\'bf \'c0\'d0\'be\'ee \'b5\'e9\'c0\'ce\'b4\'d9.\
- \'b8\'b8\'be\'e0 \'b4\'f5 \'c0\'cc\'bb\'f3 \'c0\'d0\'c0\'bb \'c1\'d9\'c0\'cc \'be\'f8\'c0\'b8\'b8\'e9 break\'b8\'a6 \'c5\'eb\'c7\'d8 \'ba\'fc\'c1\'ae\'b3\'aa\'b0\'a3\'b4\'d9. (readline()\'c0\'ba \'b4\'f5 \'c0\'cc\'bb\'f3 \'c0\'d0\'c0\'bb \'c1\'d9\'c0\'cc \'be\'f8\'c0\'bb \'b0\'e6\'bf\'ec None\'c0\'bb \'c3\'e2\'b7\'c2\'c7\'d1\'b4\'d9.)\
\
(cf)\
while 1:\
    data = input()\
    if not data:\
        break\
    print(data)\
- \'bb\'e7\'bf\'eb\'c0\'da\'bf\'a1\'b0\'d4 \'c0\'d4\'b7\'c2\'b0\'aa\'c0\'cc \'be\'f8\'c0\'bb \'b6\'a7 \'b1\'ee\'c1\'f6 \'c0\'d4\'b7\'c2\'c0\'bb \'b9\'de\'be\'c6 \'c3\'e2\'b7\'c2\'c7\'d4\
- \'c0\'a7\'c0\'c7 \'bf\'b9\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'d8 \'c0\'d4\'b7\'c2\'b9\'de\'b4\'c2 \'b9\'e6\'bd\'c4\'b8\'b8 \'b4\'d9\'b8\'a7 (\'c5\'b0\'ba\'b8\'b5\'e5 \'c0\'d4\'b7\'c2 vs \'c6\'c4\'c0\'cf \'c0\'d4\'b7\'c2)\
\

\f1\b * readlines \'c7\'d4\'bc\'f6 \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2
\f0\b0 \
f=open("\'bb\'f5\'c6\'c4\'c0\'cf.txt",'r')\
lines = f.readlines()\
for line in lines:\
    print(line)\
f.close()\
- readlines \'c7\'d4\'bc\'f6\'b4\'c2 \'c6\'c4\'c0\'cf\'c0\'c7 \'b8\'f0\'b5\'e7 \'c1\'d9\'c0\'bb \'c0\'d0\'be\'ee\'bc\'ad \'b0\'a2\'b0\'a2\'c0\'c7 \'c1\'d9\'c0\'bb \'bf\'e4\'bc\'d2\'b7\'ce \'b0\'ae\'b4\'c2 \'b8\'ae\'bd\'ba\'c6\'ae\'b7\'ce \'b5\'b9\'b7\'c1\'c1\'d8\'b4\'d9.\
- \'c1\'ef \'c0\'a7\'c0\'c7 \'bf\'b9\'bf\'a1\'bc\'ad lines = [\'a1\'b01\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9\'a1\'b1, \'a1\'b02\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9\'a1\'b1, \'a1\'a6 ,\'a1\'b110\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\'a1\'b1]\'c0\'cc\'b0\'ed, for\'b9\'ae\'c0\'bb \'c5\'eb\'c7\'d8 \'c3\'e2\'b7\'c2\'c7\'d1 \'b0\'cd\'c0\'cc\'b4\'d9.\
\

\f1\b * read \'c7\'d4\'bc\'f6 \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2
\f0\b0 \
f=open("\'bb\'f5\'c6\'c4\'c0\'cf.txt",'r')\
data = f.read()\
print(data)\
f.close()\
- f.read()\'b4\'c2 \'c6\'c4\'c0\'cf\'c0\'c7 \'b3\'bb\'bf\'eb \'c0\'fc\'c3\'bc\'b8\'a6 \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce \'b5\'b9\'b7\'c1\'c1\'d8\'b4\'d9.\
- \'c0\'a7 \'bf\'b9\'c0\'c7 data = \'c6\'c4\'c0\'cf\'c0\'c7 \'c0\'fc\'c3\'bc \'b3\'bb\'bf\'eb\'c0\'cc\'b4\'d9.\
\

\f1\b \ul ** \'c6\'c4\'c0\'cf\'bf\'a1 \'bb\'f5\'b7\'ce\'bf\'ee \'b3\'bb\'bf\'eb \'c3\'df\'b0\'a1\'c7\'cf\'b1\'e2
\f0\b0 \ulnone \
- \'a1\'aew\'a1\'af\'be\'b2\'b1\'e2\'b8\'f0\'b5\'e5\'b7\'ce \'c6\'c4\'c0\'cf\'c0\'bb \'bf\'ad \'b6\'a7, \'c0\'cc\'b9\'cc \'c1\'b8\'c0\'e7\'c7\'cf\'b4\'c2 \'c6\'c4\'c0\'cf\'c0\'bb \'bf\'ad\'b8\'e9 \'b1\'d7 \'c6\'c4\'c0\'cf\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'cc \'b8\'f0\'b5\'ce \'bb\'e7\'b6\'f3\'c1\'f6\'b0\'d4 \'b5\'c8\'b4\'d9.\
- \'a1\'aea\'a1\'af\'c3\'df\'b0\'a1\'b8\'f0\'b5\'e5\'b7\'ce \'c6\'c4\'c0\'cf\'c0\'bb \'bf\'ad\'b8\'e9, \'b1\'e2\'c1\'b8\'bf\'a1 \'c0\'d6\'b4\'f8 \'b0\'aa\'c0\'bb \'c0\'af\'c1\'f6\'c7\'cf\'b8\'e9\'bc\'ad \'bb\'f5\'b7\'ce\'bf\'ee \'b0\'aa\'b8\'b8 \'c3\'df\'b0\'a1\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'d9.\
\
f=open("\'bb\'f5\'c6\'c4\'c0\'cf.txt", 'a')\
for i in range(11,20):\
    data = "%d\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\\n% i\
    f.write(data)\
f.close()\
>>> \'b1\'e2\'c1\'b8\'b3\'bb\'bf\'eb + 11\'b9\'f8\'c2\'b0 ~ 19\'b9\'f8\'c2\'b0 \'c1\'d9\'c0\'d4\'b4\'cf\'b4\'d9.\
\

\f1\b \ul ** with\'b9\'ae\'b0\'fa \'c7\'d4\'b2\'b2 \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2
\f0\b0 \ulnone \
- \'c1\'f6\'b1\'dd\'b1\'ee\'c1\'f6\'b4\'c2 open\'b0\'fa close\'c7\'d4\'bc\'f6\'b8\'a6 \'b0\'b0\'c0\'cc \'bb\'e7\'bf\'eb\'c7\'d8 \'c3\'b3\'b8\'ae\'b8\'a6 \'c7\'df\'b4\'c2\'b5\'a5, \'c6\'c4\'c0\'cc\'bd\'e3\'bf\'a1\'b4\'c2 \'c0\'cc \'b5\'d1\'c0\'bb \'b5\'bf\'bd\'c3\'bf\'a1 \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce \'c3\'b3\'b8\'ae\'c7\'d8\'c1\'d6\'b4\'c2 \'c7\'d4\'bc\'f6\'b0\'a1 \'c0\'d6\'b4\'d9.\
\
with open("\'bb\'f5\'c6\'c4\'c0\'cf.txt", "w") as f:\
    f.write("Life is too short, you need python")\
\
- with \'ba\'ed\'b7\'cf\'c0\'bb \'b9\'fe\'be\'ee\'b3\'aa\'b4\'c2 \'bc\'f8\'b0\'a3, \'bf\'ad\'b8\'b0 \'c6\'c4\'c0\'cf \'b0\'b4\'c3\'bc f\'b0\'a1 \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce close\'b5\'c8\'b4\'d9.\
\

\f1\b * sys \'b8\'f0\'b5\'e2\'b7\'ce \'b8\'c5\'b0\'b3\'ba\'af\'bc\'f6 \'c1\'d6\'b1\'e2
\f0\b0 \
import sys\
args = sys.argv[1:]\
for i in args:\
    print(i)\
(\'c7\'c1\'b7\'d2\'c7\'c1\'c6\'ae\'bf\'a1 python3 4-3.py aaa bbb ccc \'c0\'d4\'b7\'c2)\
>>> aaa bbb ccc\
\
- \'c0\'d4\'b7\'c2\'b9\'de\'c0\'ba \'c0\'ce\'bc\'f6\'b8\'a6 for\'b9\'ae\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d8 \'c7\'cf\'b3\'aa\'be\'bf \'c3\'e2\'b7\'c2\
- sys\'b8\'f0\'b5\'e2\'c0\'c7 argv\'b4\'c2 \'b8\'ed\'b7\'c9 \'c3\'a2\'bf\'a1\'bc\'ad \'c0\'d4\'b7\'c2\'c7\'d1 \'c0\'ce\'bc\'f6\'b8\'a6 \'c0\'c7\'b9\'cc\'c7\'d1\'b4\'d9.\
- argv[0]\'c0\'ba \'c6\'c4\'c0\'cf \'c0\'cc\'b8\'a7\'c0\'cc \'b5\'c7\'b0\'ed (4-3.py), \'b1\'d7 \'b5\'da\'bf\'a1\'ba\'ce\'c5\'cd \'b5\'fb\'b6\'f3\'bf\'c0\'b4\'c2 \'c0\'ce\'bc\'f6\'b0\'a1 \'c2\'f7\'b7\'ca\'b4\'eb\'b7\'ce (\'b6\'e7\'be\'ee\'be\'b2\'b1\'e2\'b7\'ce \'b1\'b8\'ba\'d0) argv[1], argv[2], \'a1\'a6\'b0\'a1 \'b5\'c8\'b4\'d9.\
\
(\'c8\'b0\'bf\'eb\'a1\'a6 \'b4\'eb\'b9\'ae\'c0\'da \'c3\'e2\'b7\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5)\
import sys\
args = sys.argv[1:]\
for i in args:\
    print(i.upper(), end=' ')\
(\'c7\'c1\'b7\'d2\'c7\'c1\'c6\'ae\'bf\'a1 life is too short, you need python \'c0\'d4\'b7\'c2)\
>>> LIFE IS TOO SHORT, YOU NEED PYTHON\
}