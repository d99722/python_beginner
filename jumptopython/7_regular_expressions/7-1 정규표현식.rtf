{\rtf1\ansi\ansicpg949\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11000\viewh19580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 ch7-1. \'c1\'a4\'b1\'d4 \'c7\'a5\'c7\'f6\'bd\'c4 regular expressions\
- \'ba\'b9\'c0\'e2\'c7\'d1 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c3\'b3\'b8\'ae\'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\
- \'c6\'c4\'c0\'cc\'bd\'e3\'b8\'b8\'c0\'c7 \'b0\'ed\'c0\'af \'b9\'ae\'b9\'fd\'c0\'cc \'be\'c6\'b4\'cf\'b6\'f3, \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c3\'b3\'b8\'ae\'c7\'cf\'b4\'c2 \'b8\'f0\'b5\'e7 \'b0\'f7\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9.\
\

\f1\b \ul ** \'c1\'a4\'b1\'d4 \'c7\'a5\'c7\'f6\'bd\'c4\'c0\'ba \'bf\'d6 \'c7\'ca\'bf\'e4\'c7\'d1\'b0\'a1?
\f0\b0 \ulnone \
Q\
\'c1\'d6\'b9\'ce\'b5\'ee\'b7\'cf\'b9\'f8\'c8\'a3\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'cf\'b0\'ed \'c0\'d6\'b4\'c2 \'c5\'d8\'bd\'ba\'c6\'ae\'b0\'a1 \'c0\'d6\'b4\'d9.\
\'c0\'cc \'c5\'d8\'bd\'ba\'c6\'ae\'bf\'a1 \'c6\'f7\'c7\'d4\'b5\'c8 \'b8\'f0\'b5\'e7 \'c1\'d6\'b9\'ce\'b5\'ee\'b7\'cf\'b9\'f8\'c8\'a3\'c0\'c7 \'b5\'de\'c0\'da\'b8\'ae\'b8\'a6 * \'b9\'ae\'c0\'da\'b7\'ce \'ba\'af\'b0\'e6\'c7\'d8\'ba\'b8\'c0\'da.\
\
(\'c1\'a4\'b1\'d4\'bd\'c4\'c0\'bb \'b8\'f0\'b8\'a5\'b4\'d9\'b8\'e9?)\
1. \'c0\'fc\'c3\'bc\'c5\'d8\'bd\'ba\'c6\'ae\'b8\'a6 \'b0\'f8\'b9\'e9 \'b9\'ae\'c0\'da\'b7\'ce \'b3\'aa\'b4\'ab\'b4\'d9. (split)\
2. \'b3\'aa\'b4\'b6 \'b4\'dc\'be\'ee\'b0\'a1 \'c1\'d6\'b9\'ce\'b5\'ee\'b7\'cf\'b9\'f8\'c8\'a3 \'c7\'fc\'bd\'c4\'c0\'ce\'c1\'f6 \'c1\'b6\'bb\'e7\'c7\'d1\'b4\'d9.\
3. \'b4\'dc\'be\'ee\'b0\'a1 \'c1\'d6\'b9\'ce\'b5\'ee\'b7\'cf\'b9\'f8\'c8\'a3 \'c7\'fc\'bd\'c4\'c0\'cc\'b6\'f3\'b8\'e9 \'b5\'de\'c0\'da\'b8\'ae\'b8\'a6 *\'b7\'ce \'ba\'af\'c8\'af\'c7\'d1\'b4\'d9.\
4. \'b3\'aa\'b4\'b6 \'b4\'dc\'be\'ee\'b8\'a6 \'b4\'d9\'bd\'c3 \'c1\'b6\'b8\'b3\'c7\'d1\'b4\'d9.\
\
data = """\
park 970202-1523412\
kim 960321-2534123\
"""\
\
result = []\
for line in data.split("\\n"):\
    word_result=[]\
    for word in line.split(" "):\
        if len(word) == 14 and word[:6].isdigit() and word[7:].isdigit():\
            word = word[:6] + "-" + "*******"\
        word_result.append(word)\
    result.append(" ".join(word_result))\
print("\\n".join(result))\
\
- \'c0\'d4\'b7\'c2\'b9\'de\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bf\'a3\'c5\'cd\'b4\'dc\'c0\'a7\'b7\'ce \'c2\'c9\'b0\'b3\'b0\'ed\
- \'c2\'c9\'b0\'b5 \'c1\'d9\'b5\'e9\'c0\'bb \'b0\'f8\'b9\'e9 \'b4\'dc\'c0\'a7\'b7\'ce \'c2\'c9\'b0\'b3\'b0\'ed\
- \'c2\'c9\'b0\'b5 \'b4\'dc\'be\'ee\'b5\'e9\'c0\'bb \'c1\'d6\'b9\'ce\'b9\'f8\'c8\'a3\'c0\'c7 \'c7\'fc\'bd\'c4\'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\
- \'c1\'d6\'b9\'ce\'b9\'f8\'c8\'a3\'b6\'f3\'b8\'e9 *\'c3\'b3\'b8\'ae\'c7\'d8\'bc\'ad \'c8\'ae\'c0\'ce\
- \'b0\'f8\'b9\'e9 \'b4\'dc\'c0\'a7\'b7\'ce \'b4\'d9\'bd\'c3 \'c7\'d5\'c3\'c4\'c1\'dc\
- \'bf\'a3\'c5\'cd \'b4\'dc\'c0\'a7\'b7\'ce \'b4\'d9\'bd\'c3 \'c7\'d5\'c3\'c4\'c1\'dc\
- \'c3\'e2\'b7\'c2\
\
(\'c1\'a4\'b1\'d4\'bd\'c4\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9\'b8\'e9?)\
import re\
\
data = """\
park 970202-1523412\
kim 960321-2534123\
"""\
\
pat = re.compile("(\\d\{6\})[-]\\d\{7\}")\
print(pat.sub("\\g<1>-*******",data))\
\
- \'bb\'f3\'b4\'e7\'c8\'f7 \'b0\'a3\'b0\'e1\'c7\'d8\'c1\'f8\'b4\'d9\'a1\'a6 \'ba\'b9\'c0\'e2\'c7\'d8\'c1\'fa \'bc\'f6\'b7\'cf \'c8\'bf\'bf\'eb \'bf\'c3\'b6\'f3\'b0\'a8!\
- \'b4\'d9\'c0\'bd \'c0\'e5\'ba\'ce\'c5\'cd \'b9\'ab\'bd\'bc \'bc\'d2\'b8\'ae\'c0\'ce\'c1\'f6 \'b9\'e8\'bf\'ec\'b1\'e2!}